{"version":3,"file":"static/js/535.079ce48e.chunk.js","mappings":"kMACA,EAAuB,0B,UCDVA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAc,SAAAH,GAAK,OAAIA,EAAMC,SAASG,KAAnB,EACnBC,EAAkB,SAAAL,GAAK,OAAIA,EAAMC,SAASG,KAAnB,EACvBE,EAAe,SAAAN,GAAK,OAAIA,EAAMO,MAAV,E,SCEpBC,EAAc,WACzB,IAAMP,GAAWQ,EAAAA,EAAAA,IAAYV,GAC7BW,QAAQC,IAAIV,GACZ,IAAMW,GAAWC,EAAAA,EAAAA,MAmBjB,OACE,kBAAMC,SAlBa,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAc,CAClBC,KAAMH,EAAEI,OAAOC,SAASC,KAAKC,MAC7BC,OAAQR,EAAEI,OAAOC,SAASI,IAAIF,OAGnBrB,EAASwB,KAAI,SAAAC,GAAI,OAAIA,EAAKR,IAAT,IACrBS,SAASV,EAAYC,MAC5BU,MAAM,GAAD,OAAIX,EAAYC,KAAhB,4BAELN,GAASiB,EAAAA,EAAAA,IAAWZ,IAGtBF,EAAEI,OAAOW,OACV,EAG+BC,UAAWC,EAAzC,WACE,qCAEE,kBACEC,KAAK,OACLf,KAAK,OACLgB,QAAQ,oBACRC,MAAM,yIACNC,UAAQ,QAGZ,uCAEE,kBACEH,KAAK,MACLf,KAAK,MACLgB,QAAQ,2EACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQH,KAAK,SAAb,2BAGL,ECnDD,EAA+B,kCCSlBI,EAAc,WACzB,IAAMpC,GAAWQ,EAAAA,EAAAA,IAAYV,GACvBuC,GAAc7B,EAAAA,EAAAA,IAAYH,GAC1BiC,GAAY9B,EAAAA,EAAAA,IAAYJ,GACxBD,GAAQK,EAAAA,EAAAA,IAAYN,GACpBS,GAAWC,EAAAA,EAAAA,MAGX2B,EAAmBvC,EAASM,QAAO,SAAAmB,GAAI,OAC3CA,EAAKR,KAAKuB,cAAcd,SAASW,EAAYG,cADF,IAI7C,OACE,0BACGF,IAAcnC,IAAS,yCACvBA,IAAS,uBAAIA,IACboC,EAAiBf,KAAI,SAAAC,GAAI,OACxB,gBAAIK,UAAWC,EAAf,UACGN,EAAKR,KADR,KACgBQ,EAAKH,QACnB,mBACEU,KAAK,SACLf,KAAMQ,EAAKR,KACXwB,QAAS,kBAAM9B,GAAS+B,EAAAA,EAAAA,IAAcjB,EAAKkB,IAAlC,EAHX,sBAFoClB,EAAKkB,GADnB,MAc/B,E,UCrCYC,EAAS,WACpB,IAAMjC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,sDAEE,kBAAOoB,KAAK,OAAOf,KAAK,SAAS4B,SAPX,SAAA/B,GACxBH,GAASmC,EAAAA,EAAAA,GAAchC,EAAEI,OAAOG,OACjC,MAQF,E,UCGD,EAdiB,WACf,OACE,iCACE,SAAC0B,EAAA,EAAD,WACE,2CAEF,SAACxC,EAAD,KACA,sCACA,SAACqC,EAAD,KACA,SAACR,EAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\"};","export const selectContacts = state => state.contacts.items;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport css from './ContactForm.module.css';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  console.log(contacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contactItem = {\n      name: e.target.elements.text.value,\n      number: e.target.elements.tel.value,\n    };\n\n    const name = contacts.map(item => item.name);\n    if (name.includes(contactItem.name)) {\n      alert(`${contactItem.name} is alredy in contacts.`);\n    } else {\n      dispatch(addContact(contactItem));\n    }\n\n    e.target.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"text\"\n          pattern=\"^[A-Za-z.'\\- ]+$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"tel\"\n          pattern=\"^\\+?\\d{1,4}?\\s?\\(?\\d{1,4}?\\)?\\s?\\d{1,4}\\s?\\d{1,4}\\s?\\d{1,9}$\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item_contact\":\"ContactList_item_contact__7f2K5\"};","import { useDispatch, useSelector } from 'react-redux';\nimport css from './ContactList.module.css';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectFilter,\n  selectIsLoading,\n  selectError,\n} from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filterValue = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  //Funkcja filtruje kontakty na podstawie przekazanej tablicy (contacts) i stringa (filter)\n  const filteredContacts = contacts.filter(item =>\n    item.name.toLowerCase().includes(filterValue.toLowerCase())\n  );\n\n  return (\n    <ul>\n      {isLoading && !error && <p>Is loading...</p>}\n      {error && <p>{error}</p>}\n      {filteredContacts.map(item => (\n        <li className={css.item_contact} key={item.id}>\n          {item.name}: {item.number}\n          <button\n            type=\"button\"\n            name={item.name}\n            onClick={() => dispatch(deleteContact(item.id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/contacts/sliceFilter';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const inputFilterChange = e => {\n    dispatch(filterContact(e.target.value));\n  };\n\n  return (\n    <label>\n      Find contacts by name\n      <input type=\"text\" name=\"filter\" onChange={inputFilterChange} />\n    </label>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Helmet } from 'react-helmet';\n\nconst Contacts = () => {\n  return (\n    <>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectError","error","selectIsLoading","selectFilter","filter","ContactForm","useSelector","console","log","dispatch","useDispatch","onSubmit","e","preventDefault","contactItem","name","target","elements","text","value","number","tel","map","item","includes","alert","addContact","reset","className","css","type","pattern","title","required","ContactList","filterValue","isLoading","filteredContacts","toLowerCase","onClick","deleteContact","id","Filter","onChange","filterContact","Helmet"],"sourceRoot":""}